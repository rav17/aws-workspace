---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Template for PostgreSQL, template to create a highly-available,
  RDS DBInstance version 9.3 with alarming on important metrics that indicate the
  health of the database **WARNING**  '
Parameters:
  VpcId:
    Type: String
    Description: VpcId of your existing Virtual Private Cloud(VPC)
    Default: 'vpc-061f0b2150fff7b9b'
  Subnets:
    Type: CommaDelimitedList
    Description: The list of SubnetIds,for at least two Availability Zones in the
      region
    Default: "subnet-08e48c189b4be5551,subnet-013f6d17a0193fa0d"
  DBIdentifier:
    Type: String
    Description: The identifier of this postgressql database
    Default: "demo-postgresql"
  MyDBName:
    Default: demopostgresdbinstance
    Description: The database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBUser:
    Default: 'demoappuser'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBPassword:
    Description: The database admin account password
    Type: String
    NoEcho: true
    Default: 'demoappuserpassword'
    MinLength: '8'
    MaxLength: '64'
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters.
  DBAllocatedStorage:
    Default: '20'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 5 and 1024Gb.
  MyDBInstanceClass:
    Default: db.t2.micro
    Description: The database instance type
    Type: String
    ConstraintDescription: must select a valid database instance type.
  MultiAZDatabase:
    Default: 'false'
    Description: Create a multi-AZ RDS database instance
    Type: String
    AllowedValues:
    - 'true'
    - 'false'
    ConstraintDescription: must be either true or false.
  DBInstanceIdentifier:
    Type: String
    Default: "demo-postgresql"
Resources:
  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets available for the RDS DB Instance
      SubnetIds:
        Ref: Subnets
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "RDS_SG"
      GroupDescription: Allow access to the postgres from the EKS
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '5432'
        ToPort: '5432'
        CidrIp: 192.168.0.0/16
  # Create a secret with the username admin and a randomly generated password in JSON.  
  secretPostgresqlMasterUser:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: 'This is the secret for my postgresql instance'
      GenerateSecretString:
        SecretStringTemplate: '{"username": "masteruser"}'
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludeCharacters: '"@/\$`&_,{}[]~+=|;:^*-()'
  
  MyDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier:
        Ref: DBInstanceIdentifier
      AllocatedStorage:
        Ref: DBAllocatedStorage
      AutoMinorVersionUpgrade: 'false'
      VPCSecurityGroups:
      - Ref: SecurityGroup
      DBName:
        Ref: MyDBName
      DBInstanceClass:
        Ref: MyDBInstanceClass
      DBSubnetGroupName:
        Ref: MyDBSubnetGroup
      Engine: postgres
      EngineVersion: 11.5
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref secretPostgresqlMasterUser, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref secretPostgresqlMasterUser, ':SecretString:password}}' ]]
      MultiAZ:
        Ref: MultiAZDatabase
      StorageType: gp2
      Tags:
      - Key: Name
        Value:
          Ref: DBIdentifier


# Update the referenced secret with properties of the RDS database.
# This is required to enable rotation. To learn more, visit our documentation
# https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html
  SecretRDSInstanceAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref secretPostgresqlMasterUser
      TargetId: !Ref MyDB
      TargetType: AWS::RDS::DBInstance


Outputs:
  JDBCConnectionString:
    Description: JDBC connection string for database
    Value:
      Fn::Join:
      - ''
      - - jdbc:postgresql://
        - Fn::GetAtt:
          - MyDB
          - Endpoint.Address
        - ":"
        - Fn::GetAtt:
          - MyDB
          - Endpoint.Port
        - "/"
        - Ref: MyDBName
  DBAddress:
    Description: address of database endpoint
    Value:
      Fn::GetAtt:
      - MyDB
      - Endpoint.Address
  DBPort:
    Description: database endpoint port
    Value:
      Fn::GetAtt:
      - MyDB
      - Endpoint.Port
